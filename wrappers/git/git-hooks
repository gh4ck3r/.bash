#!/bin/bash

if ! git_dir=$(git rev-parse --git-dir 2>&-);then
  echo "fatal: Not a git repository (or any parent up to mount point $(dirname $PWD))" >&2
  exit;
fi
hooks_dir=$git_dir/hooks

# Full hook list
valid_hooks=(
  applypatch-msg
  pre-applypatch
  post-applypatch
  pre-commit
  prepare-commit-msg
  commit-msg
  post-commit
  pre-rebase
  post-checkout
  post-merge
  pre-receive
  update
  post-receive
  post-update
  pre-auto-gc
  post-rewrite
  pre-push
)
case "$#" in
  0)
    for hook in $hooks_dir/*;do
      if [[ $hook = *.sample ]];then
        echo -e "\033[2m$(basename $hook)\033[0m";
      else
        echo -e "\033[91;1m$(basename $hook)\033[0m";
      fi
    done
    ;;

  1)
    if ! ( [[ ${valid_hooks[@]} = *\ $1* ]] || [[ ${valid_hooks[@]} = *$1\ * ]]);then
      echo Error
      [[ $SHLVL = 1 ]] && return || exit 124
    fi
    TARGET_HOOK=$hooks_dir/$1

    EDITOR=$(git config core.editor)
    if [[ $EDITOR = vi* ]]; then
      if ! [[ -f $TARGET_HOOK ]] && [[ -f $TARGET_HOOK.sample ]];then
        EDITOR_OPTION+="+read $TARGET_HOOK.sample | filetype detect"
      fi
    fi

    $EDITOR "$EDITOR_OPTION" "$TARGET_HOOK"
    ;;

  *)
    # TODO : Usage
    ;;
esac

